/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dolists;

import com.itextpdf.text.DocumentException;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.MouseInfo;
import java.awt.Point;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alber
 */
public class DoLists extends javax.swing.JFrame {

    private DefaultTableModel t;
    private TextAutoCompleter autocomplete;
    /**
     * Creates new form DoLists
     */
    public DoLists() throws ClassNotFoundException {
        initComponents();
        
        // Centrar pantalla
        this.setLocationRelativeTo(null);
        
        // Poner título
        this.setTitle("Inicio - DoLists");
        
        // Obtengo usuarios
        OperacionesBD o = new OperacionesBD();
        ArrayList<String> usuarios = o.obtainUsersAutocomplete(1);
        
        // Creo autocompletado
        autocomplete = new TextAutoCompleter(buscador);
        
        usuarios.forEach((u) -> {
            autocomplete.addItem(u);
        });
        
        // Relleno tabla con los usuarios recientes
        t = (DefaultTableModel) tabla.getModel();
        
        // Obtengo usuarios recientes, si se han logrado
        usuarios = o.obtainRecentUsers();
        if(!usuarios.get(0).equals("error")) {
            String [] s;
            for(String u : usuarios) {
                s = u.split(" - ");
                t.addRow(new Object[]{s[0],s[1]});
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_tit = new javax.swing.JLabel();
        titulo = new javax.swing.JTextField();
        buscador = new javax.swing.JTextField();
        btn_añadir = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btn_dopdf = new javax.swing.JButton();
        barra_menu = new javax.swing.JMenuBar();
        start = new javax.swing.JMenu();
        inicio = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        options = new javax.swing.JMenu();
        add_user = new javax.swing.JMenuItem();
        delete_user = new javax.swing.JMenuItem();
        modify_user = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label_tit.setText("Título lista:");

        buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscadorActionPerformed(evt);
            }
        });

        btn_añadir.setText("Añadir");
        btn_añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_añadirActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "DNI"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        scroll.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(1).setMaxWidth(75);
        }

        btn_dopdf.setText("Hacer PDF");
        btn_dopdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dopdfActionPerformed(evt);
            }
        });

        start.setText("Inicio");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        inicio.setText("Ir a Inicio");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });
        start.add(inicio);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        start.add(salir);

        barra_menu.add(start);

        options.setText("Opciones");

        add_user.setText("Añadir Usuario");
        add_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_userActionPerformed(evt);
            }
        });
        options.add(add_user);

        delete_user.setText("Eliminar Usuario");
        delete_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_userActionPerformed(evt);
            }
        });
        options.add(delete_user);

        modify_user.setText("Modificar Usuario");
        modify_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modify_userActionPerformed(evt);
            }
        });
        options.add(modify_user);

        barra_menu.add(options);

        setJMenuBar(barra_menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(btn_añadir))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(label_tit)
                                        .addGap(18, 18, 18)
                                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(btn_dopdf)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_tit)
                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_añadir))
                .addGap(18, 18, 18)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_dopdf)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        DoLists d = null;
        try {
            d = new DoLists();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
        }
        d.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_inicioActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void add_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_userActionPerformed
        AddUser a = new AddUser();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_add_userActionPerformed

    private void delete_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_userActionPerformed
        DeleteUser  d = null;
        try {
            d = new DeleteUser();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
        }
        d.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_delete_userActionPerformed

    private void buscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscadorActionPerformed

    private void btn_añadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_añadirActionPerformed
        // Obtengo modelo de la tabla
        t = (DefaultTableModel) tabla.getModel();
        
        String elem = buscador.getText();
        // Si se ha introducido un resultado en el buscador
        if(!elem.isEmpty()) {
            String [] s = elem.split(" - ");

            // Añado el dni y el nombre obtenido del autocompletado a la tabla
            t.addRow(new Object[]{s[0],s[1]});
            
            // Lo actualizo a reciente
            OperacionesBD o = new OperacionesBD();
            try {
                o.updateRecent(s[1], true);
            } catch (ClassNotFoundException | IOException ex) {
                Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Elimino del autocompletado el item añadido
            autocomplete.removeItem(elem);

            // Vacío el buscador
            buscador.setText("");
        }
        else JOptionPane.showMessageDialog(rootPane, "Introduzca algún elemento en el buscador.");
    }//GEN-LAST:event_btn_añadirActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
 
    }//GEN-LAST:event_startActionPerformed

    private void modify_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modify_userActionPerformed
        ModifyUser m = null;
        try {
            m = new ModifyUser();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
        }
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_modify_userActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        Point p = MouseInfo.getPointerInfo().getLocation();
        
        int x = p.x - tabla.getLocationOnScreen().x;
        int y = p.y - tabla.getLocationOnScreen().y;
        
        int fila = tabla.rowAtPoint(new Point(x,y));

        if(fila >= 0) {
            // Obtengo el nombre y el dni
            String nombre = (String) tabla.getValueAt(fila, 0);
            String dni = (String) tabla.getValueAt(fila, 1);

            // Elimino esa fila de la tabla
            t = (DefaultTableModel) tabla.getModel();
            t.removeRow(fila);
            
            // Lo actualizo a no reciente
            OperacionesBD o = new OperacionesBD();
            try {
                o.updateRecent(dni, false);
            } catch (ClassNotFoundException | IOException ex) {
                Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            // Añado la fila en el autcompletado
            autocomplete.addItem(nombre + " - " + dni);
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void btn_dopdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dopdfActionPerformed
        JFileChooser elector = new JFileChooser();
        elector.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = elector.showOpenDialog(null);
        File f = elector.getSelectedFile();
        if(r == JFileChooser.APPROVE_OPTION) {
            // Preparar datos
            ArrayList<String> datos = new ArrayList<>();
            String nombre,dni;
            for(int i=0;i<t.getRowCount();i++) {
                nombre = (String) tabla.getValueAt(i, 0);
                dni = (String) tabla.getValueAt(i, 1);
                datos.add(nombre + " " + dni);
            }
            
            // Comprobamos si hay datos
            if(datos.size() > 0) {
                // Comprobamos título
                String t = titulo.getText();
                if(!t.isEmpty()) {
                    OperacionesPDF o = new OperacionesPDF();
                    try {
                        String msg = o.generatePDFLista(datos, f.getAbsolutePath(), t);
                        if(!msg.equals("error")) JOptionPane.showMessageDialog(rootPane, "PDF de la lista generado con éxito; está almacenado en: " + f.getCanonicalPath() + "\\" + t + ".pdf.");
                        else JOptionPane.showMessageDialog(rootPane, "Problemas al generar el PDF.");
                    } catch (FileNotFoundException | DocumentException | ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else JOptionPane.showMessageDialog(rootPane, "No se ha introducido el título de la lista.");
            }
            else JOptionPane.showMessageDialog(rootPane, "No hay usuarios insertados en la tabla de la lista."); 
        }
        titulo.setText("");
    }//GEN-LAST:event_btn_dopdfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DoLists().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(DoLists.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem add_user;
    private javax.swing.JMenuBar barra_menu;
    private javax.swing.JButton btn_añadir;
    private javax.swing.JButton btn_dopdf;
    private javax.swing.JTextField buscador;
    private javax.swing.JMenuItem delete_user;
    private javax.swing.JMenuItem inicio;
    private javax.swing.JLabel label_tit;
    private javax.swing.JMenuItem modify_user;
    private javax.swing.JMenu options;
    private javax.swing.JMenuItem salir;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JMenu start;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField titulo;
    // End of variables declaration//GEN-END:variables
}
